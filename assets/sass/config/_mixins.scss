@mixin clearfix {
    &:before, &:after {
        display: table;
        content: " ";
    }
    &:after {
        clear: both;
    }
}

@mixin sprites {
    background-color: transparent;
    background-image: url(../images/sprites.png);
    background-repeat: no-repeat;
}

@mixin fontawesome {
    display: inline-block;
    font-family: FontAwesome;
    font-style: normal;
    font-weight: normal;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@mixin border-radius($number...) {
    -webkit-border-radius: $number;
    border-radius: $number;
}

@mixin box-shadow($val...) {
    -webkit-box-shadow: $val;
    -moz-box-shadow: $val;
    box-shadow: $val;
}

@mixin text-shadow($val...) {
    -webkit-text-shadow: $val;
    text-shadow: $val;
}

@mixin transition($val...) {
    -webkit-transition: $val;
    -moz-transition: $val;
    -o-transition: $val;
    transition: $val;
}

/* Translate */
@mixin translate($val...) {
    -webkit-transform: translate($val);
    -moz-transform: translate($val);
    -ms-transform: translate($val);
    -o-transform: translate($val);
    transform: translate($val);
}

@mixin translate3d($val...) {
    -webkit-transform: translate3d($val);
    -moz-transform: translate3d($val);
    transform: translate3d($val);
}

@mixin scale($val...) {
    -webkit-transform: scale($val);
    -moz-transform: scale($val);
    -o-transform: scale($val);
    transform: scale($val);
}

@mixin scaleX($val...) {
    -webkit-transform: scaleX($val);
    -moz-transform: scaleX($val);
    -o-transform: scaleX($val);
    transform: scaleX($val);
}

@mixin scaleY($val...) {
    -webkit-transform: scaleY($val);
    -moz-transform: scaleY($val);
    -o-transform: scaleY($val);
    transform: scaleY($val);
}

@mixin rotate($val...) {
    -webkit-transform: rotate($val);
    -ms-transform: rotate($val);
    transform: rotate($val);
}

@mixin transform-origin($val...) {
    -webkit-transform-origin: inherit;
    -moz-transform-origin: inherit;
    -ms-transform-origin: inherit;
    -o-transform-origin: inherit;
    transform-origin: inherit;
}

@mixin animation($val...) {
    -webkit-animation: $val;
    -moz-animation: $val;
    -o-animation: $val;
    animation: $val;
}

/* display flex */
@mixin display-flex{
    display: -webkit-flex;
    display: flex;
}

@mixin flex($val...){
    -webkit-flex: $val; /* Safari 6.1+ */
    -ms-flex: $val; /* IE 10 */ 
    flex: $val;    
}

@mixin flex-row{
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
}

@mixin flex-justify-content($val...) {
    -webkit-box-pack: $val;
    -webkit-justify-content: $val;
    -ms-flex-pack: $val;
    justify-content: $val;
}
@mixin flex-items($val...) {
    -webkit-box-align: $val;
    -webkit-align-items: $val;
    -ms-flex-align: $val;
    align-items: $val;
  }
@mixin flex-col-xs {
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    max-width: 100%;
}
@mixin flex-width-col-xs($val){
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 $val;
    -ms-flex: 0 0 $val;
    flex: 0 0 $val;
    max-width: $val;
}
@mixin flex-direction($val){
    -webkit-flex-direction: $val;
    -moz-flex-direction: $val;
    -ms-flex-direction: $val;
    flex-direction: $val;
}
@mixin flex-order($val){
    -webkit-order: $val;
    -moz-order: $val;
    -ms-order: $val;
    order: $val;
}

/* end flex */

@mixin comment-form{
    .form-type-textfield{
        width: 50%;
    }
    label{
        display: block;
        font-size: $font-size-10;
        color: $text-color;
        text-transform: uppercase;
    }
    input, textarea{
        background: $bg-l-color;
        width: 100%;
    }
    .filter-wrapper{
        display: none;
    }

    .form-submit{
        margin: 20px 0;
        width: auto;
        background: $link-color;
        color: $white-color;
        border: 1px solid $link-color;
        &:hover{
            background: $link-hover-color;
            color: $white-color;
        }
    }
}

// Hide arrow for select
@mixin hide-appearance {
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    -o-appearance: none;
    appearance: none;
    &::-ms-expand {
        display: none;
    }

    // Make objects can't click able
    // pointer-events: none;
}

// Placeholder text
@mixin placeholder($val...){
    &::-webkit-input-placeholder {
        color: $val;
    }
    &:-moz-placeholder {
        color: $val;
        opacity: 1;
    }
    &::-moz-placeholder {
        color: $val;
        opacity: 1;
    }
    &:-ms-input-placeholder {
        color: $val;
    }
    &:placeholder {
        color: $val;
    }
}

